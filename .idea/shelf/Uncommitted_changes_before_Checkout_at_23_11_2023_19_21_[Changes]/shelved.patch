Index: users.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from flask import request, flash, redirect, url_for\r\nfrom flask_login import login_user, login_required, logout_user, current_user\r\nfrom flask import Blueprint, render_template\r\nfrom flask_principal import RoleNeed, Permission, Identity, identity_changed\r\nimport encryption\r\nfrom db import connect_to_db_online, get_data_about_movies, get_data_about_users\r\nfrom extensions import log_manager\r\nfrom main import app\r\nfrom flask_login import UserMixin\r\n\r\nusers_bp = Blueprint('users', __name__)\r\n\r\nadmin_role = RoleNeed('admin')\r\nuser_role = RoleNeed('user')\r\n\r\n# Define permissions\r\nadmin_permission = Permission(admin_role)\r\nuser_permission = Permission(user_role)\r\n\r\n\r\n@users_bp.route(\"/register\", methods=[\"POST\", \"GET\"])  # rejestracja konta\r\ndef register():\r\n    if request.method == 'POST':  # jeżeli wysyłamy dane to rejestrujemy\r\n\r\n        # Łączę sie z bazaą danych\r\n        conn = connect_to_db_online()\r\n\r\n        # pobiera dane z HTML form\r\n        nick = request.form.get('username')  # czyta z html po atrybucie NAME\r\n        password = request.form.get('password')\r\n        account_type = request.form.get('account_type')\r\n        account_type = int(account_type)\r\n\r\n        password = encryption.hash_password(password)\r\n\r\n        # pobieranie id do konta z sekwencji\r\n        with conn:\r\n            with conn.cursor() as cursor:\r\n                cursor.execute(\"\"\"SELECT nextval('Account_ID_seq')\"\"\")\r\n                account_id = cursor.fetchone()\r\n                account_id = int(account_id[0])\r\n\r\n        # automatycznie commituje do bazy jeśli nie ma błędu jeśli błąd to rollback\r\n        query = f\"\"\"INSERT INTO accounts (account_id, nick, password, account_type_id) VALUES\r\n                            ({account_id},'{nick}','{password}',{account_type})\"\"\"\r\n        print(query)\r\n\r\n        try:\r\n            with conn:\r\n                with conn.cursor() as cursor:\r\n                    cursor.execute(query)\r\n                    flash('Account registered succesfully', 'info')\r\n        except:\r\n            flash('Failed to register account', 'error')\r\n\r\n        # zamyka połącenie po skończeniu\r\n        conn.close()\r\n\r\n        print(f\"Created account: Username: {nick} \\n Password: {password} \\n Account type: {account_type}\")\r\n\r\n        return render_template(\"users/register.html\")\r\n\r\n    else:\r\n        # jeżeli nie wysyłamy danych to po poprostu ładujemy stronę\r\n        return render_template(\"users/register.html\")\r\n\r\n\r\nclass User(UserMixin):\r\n    def __init__(self, user_id, access_level):\r\n        self.id = user_id\r\n        self.access_level = access_level\r\n\r\n\r\n@log_manager.user_loader\r\ndef load_user(user_id):\r\n    conn = connect_to_db_online()\r\n    get_level = f\"\"\"SELECT account_type_id from accounts\r\n                             WHERE account_id = '{user_id}' \"\"\"\r\n    with conn:\r\n        with conn.cursor() as cursor:\r\n            cursor.execute(get_level)\r\n            access_level = cursor.fetchone()[0]\r\n    user = User(user_id, access_level)\r\n    return user\r\n\r\n\r\n# todo zmienić na /login/<int:user_id> aby pozbyćsię parametórw w URL\r\n@users_bp.route(\"/login\", methods=[\"POST\", \"GET\"])  # logowanie na konto\r\ndef login():\r\n    if request.method == 'POST':\r\n        nick = request.form.get('nick')\r\n        entered_password = request.form.get('password')\r\n\r\n        conn = connect_to_db_online()\r\n\r\n        get_hash = f\"\"\"SELECT password from accounts\r\n                         WHERE nick LIKE '{nick}' \"\"\"\r\n\r\n        with conn:\r\n            with conn.cursor() as cursor:\r\n                cursor.execute(get_hash)\r\n                user = cursor.fetchone()\r\n\r\n                if user:\r\n                    hashed_password_from_db = user[0]\r\n                    if not encryption.bcrypt.check_password_hash(hashed_password_from_db, entered_password):\r\n                        flash('Invalid username or password', 'error')\r\n                        return render_template(\"users/login.html\")\r\n                else:\r\n                    flash('Invalid username or password', 'error')\r\n                    return render_template(\"users/login.html\")\r\n\r\n        query = f\"\"\"SELECT ac.account_id, ac.account_type_id, at.account_type FROM accounts ac\r\n                                    INNER JOIN account_types at ON at.account_type_id = ac.account_type_id\r\n                 WHERE ac.nick LIKE '{nick}' \"\"\"\r\n\r\n        with conn:\r\n            with conn.cursor() as cursor:\r\n                cursor.execute(query)\r\n                user = cursor.fetchone()\r\n\r\n                if user:\r\n                    account_type_id = user[1]\r\n                    account_id = user[0]\r\n                    account_type = user[2]\r\n\r\n                    if account_type_id == 1:\r\n                        # he got here correctly\r\n\r\n                        identity = Identity(account_id)\r\n                        identity.provides.add(RoleNeed('admin'))\r\n                        identity_changed.send(app, identity=identity)\r\n\r\n                        login_user(load_user(account_id))\r\n                        users_data = get_data_about_users()\r\n                        return redirect(url_for('admins.admin_panel', nick=nick,\r\n                                                account_type_id=int(account_type_id), account_type=account_type,\r\n                                                users=users_data))\r\n                    else:\r\n                        print(\"USER TU WLAZŁ \")\r\n                        flash('Logged in successfully', 'info')\r\n                        login_user(load_user(account_id))\r\n                        movies_data = get_data_about_movies(tier=int(account_type_id))\r\n                        return redirect(url_for('users.profile', nick=nick, movies=movies_data,\r\n                                                account_type_id=int(account_type_id), account_type=account_type))\r\n                else:\r\n                    flash('Invalid username or password', 'error')\r\n\r\n    return render_template(\"users/login.html\")\r\n\r\n\r\n@users_bp.route(\"/profile\")\r\n@login_required\r\ndef profile():\r\n    nick = request.args.get('nick')\r\n    account_type_id = request.args.get('account_type_id')\r\n    account_type = request.args.get('account_type')\r\n\r\n    returned_movies = get_data_about_movies(tier=int(account_type_id))\r\n\r\n    return render_template(\"users/profile.html\", nick=nick, movies=returned_movies, account_type=account_type)\r\n\r\n\r\n@users_bp.route(\"/logout\", methods=[\"POST\", \"GET\"])\r\n@login_required\r\ndef logout():\r\n    logout_user()\r\n    return redirect(url_for('other_routes.index'))\r\n\r\n\r\ndef delete_acocunt(account_id):\r\n    conn = connect_to_db_online()\r\n    with conn:\r\n        with conn.cursor() as cursor:\r\n            cursor.execute(f\"\"\" DELETE from accounts where accounts.account_id = {account_id} \"\"\")\r\n\r\n\r\n@users_bp.route(\"/delete_account\")\r\n@login_required\r\ndef delete_account():\r\n    user_id = current_user.get_id()\r\n    delete_acocunt(user_id)\r\n    logout_user()\r\n    return redirect(url_for('other_routes.index'))\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/users.py b/users.py
--- a/users.py	
+++ b/users.py	
@@ -5,7 +5,6 @@
 import encryption
 from db import connect_to_db_online, get_data_about_movies, get_data_about_users
 from extensions import log_manager
-from main import app
 from flask_login import UserMixin
 
 users_bp = Blueprint('users', __name__)
@@ -126,11 +125,16 @@
 
                     if account_type_id == 1:
                         # he got here correctly
+                        from main import app
 
                         identity = Identity(account_id)
-                        identity.provides.add(RoleNeed('admin'))
+                        identity.provides.add(admin_role)
                         identity_changed.send(app, identity=identity)
 
+                        for elem in identity.provides:
+                            print(type(elem))
+
+
                         login_user(load_user(account_id))
                         users_data = get_data_about_users()
                         return redirect(url_for('admins.admin_panel', nick=nick,
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Black\">\r\n    <option name=\"sdkName\" value=\"Python 3.10\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.10\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -3,5 +3,8 @@
   <component name="Black">
     <option name="sdkName" value="Python 3.10" />
   </component>
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.10" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.10 (BD_projekt_v3)" project-jdk-type="Python SDK" />
+  <component name="PyCharmProfessionalAdvertiser">
+    <option name="shown" value="true" />
+  </component>
 </project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e2526c7e-212d-4567-aa7b-55301b4d0406\" name=\"Changes\" comment=\"dodano hashowanie haseł Bcrypt\">\r\n      <change afterPath=\"$PROJECT_DIR$/static/login.css\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/static/static/register.css\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/users.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/users.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"HTML File\" />\r\n        <option value=\"CSS File\" />\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"FlaskConsoleOptions\" custom-start-script=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\">\r\n    <envs>\r\n      <env key=\"FLASK_APP\" value=\"app\" />\r\n    </envs>\r\n    <option name=\"myCustomStartScript\" value=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\" />\r\n    <option name=\"myEnvs\">\r\n      <map>\r\n        <entry key=\"FLASK_APP\" value=\"app\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"HARD\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;history&quot;: [\r\n    {\r\n      &quot;assignee&quot;: &quot;Szymon1905&quot;\r\n    }\r\n  ],\r\n  &quot;lastFilter&quot;: {\r\n    &quot;assignee&quot;: &quot;Szymon1905&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"80c2036f-5fb2-412c-8bf9-447fdb44a8c0\" />\r\n        <option name=\"url\" value=\"https://github.com/Szymon1905/BD2-projekt.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/main.py\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/templates/home.html\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/templates/login.html\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/templates/sign_up.html\" root0=\"FORCE_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 7\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2XObdF3LeJYaaQKfGy8za1iiVpn\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n    <option name=\"sortByType\" value=\"true\" />\r\n    <option name=\"sortKey\" value=\"BY_TYPE\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;revamped-tree&quot;,\r\n    &quot;list.type.of.created.stylesheet&quot;: &quot;CSS&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;DatabaseDriversLRU&quot;: [\r\n      &quot;postgresql&quot;\r\n    ],\r\n    &quot;com.intellij.ide.scratch.LRUPopupBuilder$1/&quot;: [\r\n      &quot;PostgreSQL&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Szymon\\PycharmProjects\\BD2-projekt\\templates\\users\" />\r\n      <recent name=\"C:\\Users\\Szymon\\PycharmProjects\\BD2-projekt\\templates\\admin\" />\r\n      <recent name=\"C:\\Users\\Szymon\\PycharmProjects\\BD2-projekt\\templates\" />\r\n      <recent name=\"C:\\Users\\Szymon\\PycharmProjects\\BD2-projekt\\db\" />\r\n      <recent name=\"C:\\Users\\Szymon\\PycharmProjects\\BD2-projekt\\SQL_files\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Flask server.BD2-projekt\">\r\n    <configuration name=\"BD2-projekt\" type=\"PythonConfigurationType\" factoryName=\"Python\">\r\n      <module name=\"BD2-projekt\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"BD_projekt_v3\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"BD2-projekt\" type=\"Python.FlaskServer\">\r\n      <module name=\"BD2-projekt\" />\r\n      <option name=\"target\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"targetType\" value=\"PATH\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"launchJavascriptDebuger\" value=\"false\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e2526c7e-212d-4567-aa7b-55301b4d0406\" name=\"Changes\" comment=\"\" />\r\n      <created>1698503158559</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1698503158559</updated>\r\n      <workItem from=\"1698848677278\" duration=\"42000\" />\r\n      <workItem from=\"1698852904734\" duration=\"1242000\" />\r\n      <workItem from=\"1698943297753\" duration=\"1207000\" />\r\n      <workItem from=\"1698950447874\" duration=\"3844000\" />\r\n      <workItem from=\"1700221658586\" duration=\"1322000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"unfinshed css\">\r\n      <created>1698548491344</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1698548491344</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"dodano wyświtlanie tablicy filmów\">\r\n      <created>1698552822468</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1698552822468</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Działa wyświetlanie filmów dostępnych dla użytkownika danego tieru\">\r\n      <created>1698556831272</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1698556831272</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"zmieniono kolejność wyświtlania userów w tabeli dla admina\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1698868404337</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1698868404337</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"dodano opcje dodawania filmów przez admina\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1698875946348</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1698875946348</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"DODANO USUWANIE FILMU Z BAZY\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1698951792156</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1698951792156</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Poprawiono add movie aby odświeżał po dodaniu filmu\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1698951934150</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1698951934150</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"refactor dir projektu\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1700177733053</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1700177733053</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"unfinshed css\" />\r\n    <MESSAGE value=\"dodano wyświtlanie tablicy filmów\" />\r\n    <MESSAGE value=\"Działa wyświetlanie filmów dostępnych dla użytkownika danego tieru\" />\r\n    <MESSAGE value=\"dodano opcje usuwania konta i ładniejsze guziki\" />\r\n    <MESSAGE value=\"zmieniono kolejność wyświtlania userów w tabeli dla admina\" />\r\n    <MESSAGE value=\"dodano opcje dodawania filmów przez admina\" />\r\n    <MESSAGE value=\"Dodano usuwanie filmu z bazy\" />\r\n    <MESSAGE value=\"Poprawiono add movie aby odświeżał po dodaniu filmu\" />\r\n    <MESSAGE value=\"refactor dir projektu\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"refactor dir projektu\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/BD2_projekt$encryption.coverage\" NAME=\"encryption Coverage Results\" MODIFIED=\"1700183573486\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$\" />\r\n    <SUITE FILE_PATH=\"coverage/BD2_projekt$BD2_projekt.coverage\" NAME=\"BD2-projekt Coverage Results\" MODIFIED=\"1700224234100\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,9 +5,12 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="e2526c7e-212d-4567-aa7b-55301b4d0406" name="Changes" comment="dodano hashowanie haseł Bcrypt">
-      <change afterPath="$PROJECT_DIR$/static/login.css" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/static/static/register.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/flask_session/0ff8168f3a6587a3fe8cb7e28749297d" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/flask_session/2029240f6d1128be89ddc32729463129" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/flask_session/6b3f0324dba1ef2bf3160598c3de4113" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/flask_session/9964b99f3c61a36135f73e1f06411516" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/users.py" beforeDir="false" afterPath="$PROJECT_DIR$/users.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -64,9 +67,6 @@
   </component>
   <component name="HighlightingSettingsPerFile">
     <setting file="file://$PROJECT_DIR$/main.py" root0="FORCE_HIGHLIGHTING" />
-    <setting file="file://$PROJECT_DIR$/templates/home.html" root0="FORCE_HIGHLIGHTING" />
-    <setting file="file://$PROJECT_DIR$/templates/login.html" root0="FORCE_HIGHLIGHTING" />
-    <setting file="file://$PROJECT_DIR$/templates/sign_up.html" root0="FORCE_HIGHLIGHTING" />
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
@@ -80,7 +80,6 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
     <option name="sortByType" value="true" />
-    <option name="sortKey" value="BY_TYPE" />
   </component>
   <component name="PropertiesComponent">{
   &quot;keyToString&quot;: {
@@ -114,7 +113,7 @@
       <recent name="C:\Users\Szymon\PycharmProjects\BD2-projekt\SQL_files" />
     </key>
   </component>
-  <component name="RunManager" selected="Flask server.BD2-projekt">
+  <component name="RunManager" selected="Python.main">
     <configuration name="BD2-projekt" type="PythonConfigurationType" factoryName="Python">
       <module name="BD2-projekt" />
       <option name="INTERPRETER_OPTIONS" value="" />
@@ -174,6 +173,10 @@
       <option name="launchJavascriptDebuger" value="false" />
       <method v="2" />
     </configuration>
+    <list>
+      <item itemvalue="Python.BD2-projekt" />
+      <item itemvalue="Python.main" />
+    </list>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
@@ -279,8 +282,4 @@
     <MESSAGE value="refactor dir projektu" />
     <option name="LAST_COMMIT_MESSAGE" value="refactor dir projektu" />
   </component>
-  <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/BD2_projekt$encryption.coverage" NAME="encryption Coverage Results" MODIFIED="1700183573486" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
-    <SUITE FILE_PATH="coverage/BD2_projekt$BD2_projekt.coverage" NAME="BD2-projekt Coverage Results" MODIFIED="1700224234100" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
-  </component>
 </project>
\ No newline at end of file
